<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Data.Entity.Design" #>
<#@ assembly name="System.Data" #>
<#@ import namespace="System.Data"#>
<#@ import namespace="System.Linq" #>  
<#@ import namespace="System.Data.SqlClient"#>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data.Entity.Design.PluralizationServices" #>
<#@ output extension=".cs" #>
namespace Class_generate_T4.Models;

<# 

   string strcon = @" Data Source=DESKTOP-DUE6JJJ; Initial Catalog=Northwind; Integrated Security=True; Encrypt=True; TrustServerCertificate=True;";
   SqlConnection sqlConnection = new SqlConnection(strcon);
   sqlConnection.Open();
   SqlDataAdapter adapter = new SqlDataAdapter("SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE'",sqlConnection);
   DataTable dataTable= new DataTable();
   adapter.Fill(dataTable);
   List<string> tables = new List<string>();
   foreach (DataRow row in dataTable.Rows)
   {
       string tablename =(string)row[0];
       tables.Add(tablename);
   }
   sqlConnection.Close();
    
  foreach(string tableName in tables)
{#>
public class <#=tableName.Replace(" ","")#>
{

<#  
adapter = new SqlDataAdapter($@"SELECT CONCAT(
      'public ',
      IIF(DATA_TYPE = 'nvarchar', 'string' +         (IIF(IS_NULLABLE = 'YES', '?', '')), ''),
      IIF(DATA_TYPE = 'uniqueidentifier', 'string' + (IIF(IS_NULLABLE = 'YES', '?', '')), ''),
      IIF(DATA_TYPE = 'ntext', 'string' +            (IIF(IS_NULLABLE = 'YES', '?', '')), ''),
      IIF(DATA_TYPE = 'nchar', 'string' +            (IIF(IS_NULLABLE = 'YES', '?', '')), ''),
      IIF(DATA_TYPE = 'int', 'int' +                 (IIF(IS_NULLABLE = 'YES', '?', '')), ''),
      IIF(DATA_TYPE = 'smallint', 'short' +          (IIF(IS_NULLABLE = 'YES', '?', '')), ''),
      IIF(DATA_TYPE = 'tinyint', 'byte' +            (IIF(IS_NULLABLE = 'YES', '?', '')), ''),
      IIF(DATA_TYPE = 'money', 'decimal' +           (IIF(IS_NULLABLE = 'YES', '?', '')), ''),
      IIF(DATA_TYPE = 'real', 'decimal' +           (IIF(IS_NULLABLE = 'YES', '?', '')), ''),
      IIF(DATA_TYPE = 'float', 'float' +             (IIF(IS_NULLABLE = 'YES', '?', '')), ''),
      IIF(DATA_TYPE = 'decimal', 'decimal' +         (IIF(IS_NULLABLE = 'YES', '?', '')), ''),
      IIF(DATA_TYPE = 'bit', 'bool' +                (IIF(IS_NULLABLE = 'YES', '?', '')), ''),
      IIF(DATA_TYPE = 'datetime', 'DateTime' +       (IIF(IS_NULLABLE = 'YES', '?', '')), ''),
      IIF(DATA_TYPE = 'date', 'DateTime' +           (IIF(IS_NULLABLE = 'YES', '?', '')), ''),
      IIF(DATA_TYPE = 'datetime2', 'DateTime' +      (IIF(IS_NULLABLE = 'YES', '?', '')), ''),
      IIF(DATA_TYPE = 'image', 'byte[]' +            (IIF(IS_NULLABLE = 'YES', '?', '')), ''),
      ' ',
      COLUMN_NAME,
      ' {{ get; set; }}' 
      + (IIF((DATA_TYPE = 'nvarchar' or DATA_TYPE = 'nchar') and (IS_NULLABLE = 'NO'), ' = null!;', ''))
             )
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = N'{tableName}'
      and TABLE_SCHEMA = 'dbo'", sqlConnection); 
DataTable dtable = new DataTable();
adapter.Fill(dtable);
List<string> columns = new List<string>();
foreach (DataRow row in dtable.Rows)
{
    string columnName = (string)row[0];
    columns.Add(columnName);
}
foreach (string clmName in columns)
{#>
    <#=clmName #>

<#}
#>

}
<#}
#>